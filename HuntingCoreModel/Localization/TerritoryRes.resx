<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BUTTON_CONTACT" xml:space="preserve">
    <value>Contact steward</value>
  </data>
  <data name="BUTTON_CONTACT_ACCEPT" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="BUTTON_CONTACT_DISMISS" xml:space="preserve">
    <value>Dismiss</value>
  </data>
  <data name="BUTTON_CREATE" xml:space="preserve">
    <value>Create territory</value>
  </data>
  <data name="BUTTON_INVITE_USER" xml:space="preserve">
    <value>Add user</value>
  </data>
  <data name="BUTTON_MAP_ITEM_TYPE_LIST" xml:space="preserve">
    <value>Update map item types</value>
  </data>
  <data name="BUTTON_PERSON_LIST" xml:space="preserve">
    <value>User list</value>
  </data>
  <data name="BUTTON_SAVE" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="BUTTON_SAVE_USER_LIST" xml:space="preserve">
    <value>Save role changes</value>
  </data>
  <data name="BUTTON_UPDATE" xml:space="preserve">
    <value>Update information</value>
  </data>
  <data name="BUTTON_UPDATE_MAP" xml:space="preserve">
    <value>Update map</value>
  </data>
  <data name="COLUMN_CONTACT_MESSAGE" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="COLUMN_CONTACT_NAME" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="COLUMN_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="COLUMN_STEWARD" xml:space="preserve">
    <value>Steward</value>
  </data>
  <data name="COLUMN_USER_COUNT" xml:space="preserve">
    <value>User count</value>
  </data>
  <data name="COLUMN_USER_EMAIL" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="COLUMN_USER_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="COLUMN_USER_ROLE" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="CONFIRM_DELETE_USER" xml:space="preserve">
    <value>Do you really want to remove this user from territory?</value>
  </data>
  <data name="DETAIL_CONTACT_MESSAGE" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="DETAIL_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DETAIL_IS_PUBLIC" xml:space="preserve">
    <value>Is public?</value>
  </data>
  <data name="DETAIL_MAP" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="DETAIL_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ERROR_CONTACT" xml:space="preserve">
    <value>Error while contacting steward</value>
  </data>
  <data name="ERROR_CREATE" xml:space="preserve">
    <value>Error while creating territory</value>
  </data>
  <data name="ERROR_DELETE_USER" xml:space="preserve">
    <value>Error while removing user from this territory</value>
  </data>
  <data name="ERROR_UPDATE" xml:space="preserve">
    <value>Error while updating territory</value>
  </data>
  <data name="LABEL_CONTACT_REQUEST" xml:space="preserve">
    <value>Requests for connection</value>
  </data>
  <data name="LABEL_CREATE_INFO" xml:space="preserve">
    <value>Create new territory and set you as it's steward</value>
  </data>
  <data name="LABEL_LEGEND" xml:space="preserve">
    <value>Legend</value>
  </data>
  <data name="LABEL_LEGEND_MAP_AREA" xml:space="preserve">
    <value>Areas</value>
  </data>
  <data name="LABEL_LEGEND_USER_LOCATION" xml:space="preserve">
    <value>User locations</value>
  </data>
  <data name="LABEL_LEGEND_USER_POINTS" xml:space="preserve">
    <value>User points</value>
  </data>
  <data name="LABEL_MAP_UPDATE_FAIL" xml:space="preserve">
    <value>Error while updating map</value>
  </data>
  <data name="LABEL_MAP_UPDATE_SUCCESS" xml:space="preserve">
    <value>Map has been successfully updated</value>
  </data>
  <data name="LABEL_PERSON_LIST_INFO" xml:space="preserve">
    <value>Here you can manage who can access this territory</value>
  </data>
  <data name="LABEL_SAVE_IN_PROGRESS" xml:space="preserve">
    <value>Saving...</value>
  </data>
  <data name="LABEL_UPDATE_INFO" xml:space="preserve">
    <value>Update information about territory</value>
  </data>
  <data name="LABEL_USER_EMAIL" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="LABEL_USER_NAME" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="MAP_ITEM_TYPE_FEEDING" xml:space="preserve">
    <value>Feeding rack</value>
  </data>
  <data name="MAP_ITEM_TYPE_POOL" xml:space="preserve">
    <value>Water pool</value>
  </data>
  <data name="MODAL_RENAME_DESCRIPTION" xml:space="preserve">
    <value>New description</value>
  </data>
  <data name="MODAL_RENAME_NAME" xml:space="preserve">
    <value>New name</value>
  </data>
  <data name="MODAL_TITLE_CONTACT" xml:space="preserve">
    <value>Contact territory</value>
  </data>
  <data name="MODAL_TITLE_DELETE_USER" xml:space="preserve">
    <value>Remove user from this territory</value>
  </data>
  <data name="MODAL_TITLE_INVITE_USER" xml:space="preserve">
    <value>Add new user</value>
  </data>
  <data name="MODAL_TITLE_RENAME" xml:space="preserve">
    <value>Rename item</value>
  </data>
  <data name="PAGE_TITLE_CREATE" xml:space="preserve">
    <value>Create new territory</value>
  </data>
  <data name="PAGE_TITLE_DETAIL" xml:space="preserve">
    <value>Territory detail</value>
  </data>
  <data name="PAGE_TITLE_LIST" xml:space="preserve">
    <value>Public territory list</value>
  </data>
  <data name="PAGE_TITLE_PERSON_LIST" xml:space="preserve">
    <value>Update user list</value>
  </data>
  <data name="PAGE_TITLE_UPDATE" xml:space="preserve">
    <value>Update territory</value>
  </data>
  <data name="PAGE_TITLE_UPDATE_MAP" xml:space="preserve">
    <value>Update map</value>
  </data>
  <data name="PAGE_TITLE_USER_POINT" xml:space="preserve">
    <value>User point</value>
  </data>
  <data name="PREFIX_AREA" xml:space="preserve">
    <value>Area </value>
  </data>
  <data name="SUCCESS_CONTACT" xml:space="preserve">
    <value>Territory steward has been contacted</value>
  </data>
  <data name="SUCCESS_CREATE" xml:space="preserve">
    <value>New territory has been created</value>
  </data>
  <data name="SUCCESS_DELETE_USER" xml:space="preserve">
    <value>User has been removed from this territory</value>
  </data>
  <data name="SUCCESS_UPDATE" xml:space="preserve">
    <value>Territory has been updated</value>
  </data>
  <data name="TERRITORY_USER_ROLE_EDITOR" xml:space="preserve">
    <value>Editor</value>
  </data>
  <data name="TERRITORY_USER_ROLE_INVITED" xml:space="preserve">
    <value>Invited</value>
  </data>
  <data name="TERRITORY_USER_ROLE_MEMBER" xml:space="preserve">
    <value>Member</value>
  </data>
</root>